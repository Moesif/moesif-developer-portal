FRONT_END_DOMAIN=127.0.0.1:4000

########################
# Moesif Configuration #
########################
MOESIF_APPLICATION_ID=
MOESIF_MANAGEMENT_TOKEN=
MOESIF_TEMPLATE_WORKSPACE_ID_LIVE_EVENT_LOG=
MOESIF_TEMPLATE_WORKSPACE_ID_TIME_SERIES=

# Only change to V1 if you're using an old version of Moesif monetization data model.
MOESIF_MONETIZATION_VERSION="V2"

###################################
# Identity Provider Configuration #
###################################

# Auth0 envars
# Only needed in frontend .env file (unless configuring M2M for AWS API Gateway)

# Okta envars
OKTA_DOMAIN=
OKTA_API_TOKEN=
OKTA_APPLICATION_ID=

#########################
# Billing Configuration #
#########################

# Only Stripe is supported. Required for credit card check out.
APP_PAYMENT_PROVIDER=stripe
STRIPE_API_KEY=

################################
# API Management Configuration #
################################

# For references to localhost, you must use 127.0.0.1 due to https://github.com/node-fetch/node-fetch/issues/1624

# Provider for generating API key to share with customer
# Must be one of "AWS", "Kong" "Tyk", "JWT", or "Auth0-M2M" (case insensitive)
# You can also implement your own by implementing the plugins/provisioningPlugin.js interface
#
# AWS: Use AWS API Gateway Lambda Authorizer with Auth0-M2M (can modify for JWT as well)
# Kong: Use Kong with key auth plugin
# Tyk: Use Tyk with key auth plugin
# JWT: Generate a standard JWT using a private key. Company id/customer id added as a claim in JWT
# Auth0-M2M: Use Auth0 Machine2Machine flows to generate an Oauth compliant client id/secret
APIM_PROVIDER="Kong"

# Kong envars
## Kong Enterprise Settings
KONG_URL="http://127.0.0.1:8001"
KONG_ADMIN_TOKEN=
## Kong Konnect Settings
KONNECT_API_URL="https://us.api.konghq.com"
KONNECT_API_VERSION="v2"
KONNECT_RUNTIME_GROUP_NAME="serverless-default"
KONNECT_PAT=

# Tyk envars
TYK_GATEWAY_URL="http://127.0.0.1:8080"
TYK_GATEWAY_SECRET_KEY=
TYK_DASH_ORG_ID=

# Auth0 Machine2Machine (Use for AWS API Gateway as well)
AUTH0_M2M_DOMAIN=
AUTH0_M2M_CLIENT_ID=
AUTH0_M2M_CLIENT_SECRET=
AUTH0_M2M_API_AUDIENCE="http://127.0.0.1:3030"
AUTH0_M2M_API_SCOPE="create:client_credentials"

# JWT signing using private key
JWT_ALGORITHM=HS256
JWT_SECRET=
JWT_USER_ID_FIELD="sub"
JWT_COMPANY_ID_FIELD="customer_id"
JWT_EXPIRES_IN=
