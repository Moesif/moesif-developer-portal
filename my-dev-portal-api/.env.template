FRONT_END_DOMAIN=127.0.0.1:4000

########################
# Moesif Configuration #
########################
MOESIF_APPLICATION_ID=
MOESIF_MANAGEMENT_TOKEN=
MOESIF_TEMPLATE_WORKSPACE_ID_LIVE_EVENT_LOG=
MOESIF_TEMPLATE_WORKSPACE_ID_TIME_SERIES=

# Only change to V1 if you're using an old version of Moesif monetization data model.
MOESIF_MONETIZATION_VERSION="V2"

###################################
# Identity Provider Configuration #
###################################

# Set to "Auth0" or "Okta" depending on your selected IdP
AUTH_PROVIDER="Auth0"
# Note, we are assume you are using asymmetric key aka RS256 algorithm.

# Auth0 envars
AUTH0_DOMAIN=

# Okta envars
OKTA_ORG_URL=
OKTA_DOMAIN=
OKTA_API_TOKEN=
OKTA_APPLICATION_ID=

#########################
# Billing Configuration #
#########################

# Only Stripe is supported. Required for credit card check out.
APP_PAYMENT_PROVIDER=stripe
STRIPE_API_KEY=

################################
# API Management Configuration #
################################

# For references to localhost, you must use 127.0.0.1 due to https://github.com/node-fetch/node-fetch/issues/1624

# Provider for generating API key to share with customer
# Must be one of "AWS" (i.e. JWT), "Kong" "Tyk", "JWT", or "Auth0-M2M" (case insensitive)
# You can also implement your own by implementing the plugins/provisioningPlugin.js interface
#
# AWS: Use AWS API Gateway Lambda Authorizer with Auth0-M2M (can modify for JWT as well)
# Kong: Use Kong with key auth plugin
# Tyk: Use Tyk with key auth plugin
# JWT: Generate a standard JWT using a private key. company id/org_id added as a claim in JWT
# Auth0-M2M: Use Auth0 Machine2Machine flows to generate an Oauth compliant client id/secret
PLUGIN_APIM_PROVIDER="Kong"

## Kong Enterprise envvars
PLUGIN_KONG_URL="http://127.0.0.1:8001"
PLUGIN_KONG_ADMIN_TOKEN=

## Kong Konnect envvars
PLUGIN_KONNECT_API_URL="https://us.api.konghq.com"
PLUGIN_KONNECT_API_VERSION="v2"
PLUGIN_KONNECT_RUNTIME_GROUP_NAME="serverless-default"
PLUGIN_KONNECT_PAT=

# Tyk envars
PLUGIN_TYK_GATEWAY_URL="http://127.0.0.1:8080"
PLUGIN_TYK_GATEWAY_SECRET_KEY=
PLUGIN_TYK_DASH_ORG_ID=

# Auth0 Machine2Machine envvars
PLUGIN_AUTH0_M2M_DOMAIN=
PLUGIN_AUTH0_M2M_CLIENT_ID=
PLUGIN_AUTH0_M2M_CLIENT_SECRET=
PLUGIN_AUTH0_M2M_API_AUDIENCE="http://127.0.0.1:3030"
PLUGIN_AUTH0_M2M_API_SCOPE="create:client_credentials"

# JWT signing using private key
PLUGIN_JWT_ALGORITHM=HS256
PLUGIN_JWT_SECRET=
PLUGIN_JWT_USER_ID_FIELD="sub"
PLUGIN_JWT_COMPANY_ID_FIELD="org_id"
PLUGIN_JWT_EXPIRES_IN=
